###########
# BUILDER #
###########

# pull official base image
FROM ubuntu:20.04 as builder
# set working directory
WORKDIR /app
# install system dependencies
RUN apt-get update && apt-get install -y python3-pip
# install python dependencies
COPY ./requirements.txt /app/requirements.txt
RUN pip wheel --no-cache-dir --no-deps --wheel-dir /app/wheels -r requirements.txt
# copy project
COPY . /app

#########
# FINAL #
#########

# pull official base image
FROM ubuntu:20.04
# expose ports
EXPOSE 5000
# create directory for the app user
RUN mkdir -p /home/app
# create the appropriate directories
ENV HOME=/home/app

ENV APP_HOME=/home/app/filecloud_hot
ENV FLASK_APP=/home/app/filecloud_hot/manage.py
ENV FLASK_ENV=development

ARG VOLUME_FILES
ENV VOLUME_FILES $VOLUME_FILES

ARG AWS_SHARED_CREDENTIALS_FILE
ENV AWS_SHARED_CREDENTIALS_FILE $AWS_SHARED_CREDENTIALS_FILE

ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=TRUE

RUN mkdir $APP_HOME
WORKDIR $APP_HOME
# install dependencies
RUN apt-get update && apt-get -y install python3-pip && apt-get install -y netcat 
COPY --from=builder /app/wheels /wheels
COPY --from=builder /app/requirements.txt .
RUN pip install --upgrade pip
RUN pip install --no-cache /wheels/*
# copy entrypoint.sh
COPY ./entrypoint.sh $APP_HOME
# copy project
COPY . $APP_HOME

### folowing block for creating user
# create the app user
#RUN addgroup --system app && adduser --system --group app
# chown all the files to the app user
#RUN chown -R app:app $APP_HOME
#RUN chmod o-rwx $VOLUME_FILES
# change to the app user
#USER app
###

# run entrypoint.sh
ENTRYPOINT ["/home/app/filecloud_hot/entrypoint.sh"]